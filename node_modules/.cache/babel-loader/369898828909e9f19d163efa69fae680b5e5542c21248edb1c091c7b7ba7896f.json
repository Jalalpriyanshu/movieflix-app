{"ast":null,"code":"import React,{useState}from\"react\";import MovieList from\"./components/MovieList\";import MovieDetail from\"./components/MovieDetail\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY=\"YOUR_OMDB_API_KEY\";// <-- Replace with your OMDb API key\nfunction App(){const[query,setQuery]=useState(\"\");const[movies,setMovies]=useState([]);const[selectedMovie,setSelectedMovie]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const searchMovies=async e=>{e.preventDefault();setLoading(true);setError(\"\");setSelectedMovie(null);try{const res=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`);const data=await res.json();if(data.Response===\"True\"){setMovies(data.Search);}else{setMovies([]);setError(data.Error);}}catch(err){setError(\"Failed to fetch movies.\");}setLoading(false);};const fetchMovieDetail=async imdbID=>{setLoading(true);setError(\"\");try{const res=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`);const data=await res.json();if(data.Response===\"True\"){setSelectedMovie(data);}else{setError(data.Error);}}catch(err){setError(\"Failed to fetch movie details.\");}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Movie Search App\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:searchMovies,className:\"search-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for a movie...\",value:query,onChange:e=>setQuery(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?\"Searching...\":\"Search\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),!selectedMovie?/*#__PURE__*/_jsx(MovieList,{movies:movies,onMovieClick:fetchMovieDetail}):/*#__PURE__*/_jsx(MovieDetail,{movie:selectedMovie,onBack:()=>setSelectedMovie(null)})]});}export default App;","map":{"version":3,"names":["React","useState","MovieList","MovieDetail","jsx","_jsx","jsxs","_jsxs","API_KEY","App","query","setQuery","movies","setMovies","selectedMovie","setSelectedMovie","loading","setLoading","error","setError","searchMovies","e","preventDefault","res","fetch","encodeURIComponent","data","json","Response","Search","Error","err","fetchMovieDetail","imdbID","className","children","onSubmit","type","placeholder","value","onChange","target","required","disabled","onMovieClick","movie","onBack"],"sources":["E:/Nexus/movie app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport MovieDetail from \"./components/MovieDetail\";\r\n\r\nconst API_KEY = \"YOUR_OMDB_API_KEY\"; // <-- Replace with your OMDb API key\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSelectedMovie(null);\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setMovies(data.Search);\r\n      } else {\r\n        setMovies([]);\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movies.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchMovieDetail = async (imdbID) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setSelectedMovie(data);\r\n      } else {\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movie details.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Movie Search App</h1>\r\n      <form onSubmit={searchMovies} className=\"search-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!selectedMovie ? (\r\n        <MovieList movies={movies} onMovieClick={fetchMovieDetail} />\r\n      ) : (\r\n        <MovieDetail movie={selectedMovie} onBack={() => setSelectedMovie(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,OAAO,CAAG,mBAAmB,CAAE;AAErC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACa,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACiB,KAAK,CAAEC,QAAQ,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAmB,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBL,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZJ,gBAAgB,CAAC,IAAI,CAAC,CACtB,GAAI,CACF,KAAM,CAAAQ,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,mCAAmChB,OAAO,MAAMiB,kBAAkB,CAACf,KAAK,CAAC,EAC3E,CAAC,CACD,KAAM,CAAAgB,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7B,GAAID,IAAI,CAACE,QAAQ,GAAK,MAAM,CAAE,CAC5Bf,SAAS,CAACa,IAAI,CAACG,MAAM,CAAC,CACxB,CAAC,IAAM,CACLhB,SAAS,CAAC,EAAE,CAAC,CACbM,QAAQ,CAACO,IAAI,CAACI,KAAK,CAAC,CACtB,CACF,CAAE,MAAOC,GAAG,CAAE,CACZZ,QAAQ,CAAC,yBAAyB,CAAC,CACrC,CACAF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAe,gBAAgB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACzChB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACF,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,mCAAmChB,OAAO,MAAMyB,MAAM,YACxD,CAAC,CACD,KAAM,CAAAP,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7B,GAAID,IAAI,CAACE,QAAQ,GAAK,MAAM,CAAE,CAC5Bb,gBAAgB,CAACW,IAAI,CAAC,CACxB,CAAC,IAAM,CACLP,QAAQ,CAACO,IAAI,CAACI,KAAK,CAAC,CACtB,CACF,CAAE,MAAOC,GAAG,CAAE,CACZZ,QAAQ,CAAC,gCAAgC,CAAC,CAC5C,CACAF,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAED,mBACEV,KAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9B,IAAA,OAAA8B,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB5B,KAAA,SAAM6B,QAAQ,CAAEhB,YAAa,CAACc,SAAS,CAAC,aAAa,CAAAC,QAAA,eACnD9B,IAAA,UACEgC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,uBAAuB,CACnCC,KAAK,CAAE7B,KAAM,CACb8B,QAAQ,CAAGnB,CAAC,EAAKV,QAAQ,CAACU,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE,CAC1CG,QAAQ,MACT,CAAC,cACFrC,IAAA,WAAQgC,IAAI,CAAC,QAAQ,CAACM,QAAQ,CAAE3B,OAAQ,CAAAmB,QAAA,CACrCnB,OAAO,CAAG,cAAc,CAAG,QAAQ,CAC9B,CAAC,EACL,CAAC,CACNE,KAAK,eAAIb,IAAA,QAAK6B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEjB,KAAK,CAAM,CAAC,CAC7C,CAACJ,aAAa,cACbT,IAAA,CAACH,SAAS,EAACU,MAAM,CAAEA,MAAO,CAACgC,YAAY,CAAEZ,gBAAiB,CAAE,CAAC,cAE7D3B,IAAA,CAACF,WAAW,EAAC0C,KAAK,CAAE/B,aAAc,CAACgC,MAAM,CAAEA,CAAA,GAAM/B,gBAAgB,CAAC,IAAI,CAAE,CAAE,CAC3E,EACE,CAAC,CAEV,CAEA,cAAe,CAAAN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}