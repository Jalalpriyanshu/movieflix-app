{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nexus\\\\movie app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport MovieDetail from \"./components/MovieDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"\"; // Replace with your OMDb API key\nconst DEFAULT_QUERY = \"Avengers\"; // You can change this to any popular keyword\n\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [defaultMovies, setDefaultMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Fetch default movies on load\n  useEffect(() => {\n    const fetchDefaultMovies = async () => {\n      setLoading(true);\n      setError(\"\");\n      try {\n        const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(DEFAULT_QUERY)}`);\n        const data = await res.json();\n        if (data.Response === \"True\") {\n          setDefaultMovies(data.Search);\n        } else {\n          setDefaultMovies([]);\n        }\n      } catch (err) {\n        setDefaultMovies([]);\n      }\n      setLoading(false);\n    };\n    fetchDefaultMovies();\n  }, []);\n  const searchMovies = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSelectedMovie(null);\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`);\n      const data = await res.json();\n      if (data.Response === \"True\") {\n        setMovies(data.Search);\n      } else {\n        setMovies([]);\n        setError(data.Error);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movies.\");\n    }\n    setLoading(false);\n  };\n  const fetchMovieDetail = async imdbID => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`);\n      const data = await res.json();\n      if (data.Response === \"True\") {\n        setSelectedMovie(data);\n      } else {\n        setError(data.Error);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movie details.\");\n    }\n    setLoading(false);\n  };\n\n  // Decide which movies to show: search results or default\n  const moviesToShow = query.length > 0 ? movies : defaultMovies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovies,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Searching...\" : \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this), !selectedMovie ? /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: moviesToShow,\n      onMovieClick: fetchMovieDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MovieDetail, {\n      movie: selectedMovie,\n      onBack: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7L3E3IX4EyHG8NcDF6N+lXIYWR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","MovieDetail","jsxDEV","_jsxDEV","API_KEY","DEFAULT_QUERY","App","_s","query","setQuery","movies","setMovies","defaultMovies","setDefaultMovies","selectedMovie","setSelectedMovie","loading","setLoading","error","setError","fetchDefaultMovies","res","fetch","encodeURIComponent","data","json","Response","Search","err","searchMovies","e","preventDefault","Error","fetchMovieDetail","imdbID","moviesToShow","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","onMovieClick","movie","onBack","_c","$RefreshReg$"],"sources":["E:/Nexus/movie app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport MovieDetail from \"./components/MovieDetail\";\r\n\r\nconst API_KEY = \"\"; // Replace with your OMDb API key\r\nconst DEFAULT_QUERY = \"Avengers\"; // You can change this to any popular keyword\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [defaultMovies, setDefaultMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch default movies on load\r\n  useEffect(() => {\r\n    const fetchDefaultMovies = async () => {\r\n      setLoading(true);\r\n      setError(\"\");\r\n      try {\r\n        const res = await fetch(\r\n          `https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(DEFAULT_QUERY)}`\r\n        );\r\n        const data = await res.json();\r\n        if (data.Response === \"True\") {\r\n          setDefaultMovies(data.Search);\r\n        } else {\r\n          setDefaultMovies([]);\r\n        }\r\n      } catch (err) {\r\n        setDefaultMovies([]);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchDefaultMovies();\r\n  }, []);\r\n\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSelectedMovie(null);\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setMovies(data.Search);\r\n      } else {\r\n        setMovies([]);\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movies.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchMovieDetail = async (imdbID) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setSelectedMovie(data);\r\n      } else {\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movie details.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Decide which movies to show: search results or default\r\n  const moviesToShow = query.length > 0 ? movies : defaultMovies;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Movie Search App</h1>\r\n      <form onSubmit={searchMovies} className=\"search-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!selectedMovie ? (\r\n        <MovieList movies={moviesToShow} onMovieClick={fetchMovieDetail} />\r\n      ) : (\r\n        <MovieDetail movie={selectedMovie} onBack={() => setSelectedMovie(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}