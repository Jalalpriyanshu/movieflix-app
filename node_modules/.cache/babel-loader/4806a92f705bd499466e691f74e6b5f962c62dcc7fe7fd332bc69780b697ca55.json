{"ast":null,"code":"var _jsxFileName = \"E:\\\\Nexus\\\\movie app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MovieList from \"./components/MovieList\";\nimport MovieDetail from \"./components/MovieDetail\";\nimport { searchMovies, getMovieDetail } from \"./api/omdb\";\n\n// Use searchMovies(query) and getMovieDetail(imdbID) in your component logic\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"ecc218a8\"; // <-- Replace with your OMDb API key\n\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const searchMovies = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(\"\");\n    setSelectedMovie(null);\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`);\n      const data = await res.json();\n      if (data.Response === \"True\") {\n        setMovies(data.Search);\n      } else {\n        setMovies([]);\n        setError(data.Error);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movies.\");\n    }\n    setLoading(false);\n  };\n  const fetchMovieDetail = async imdbID => {\n    setLoading(true);\n    setError(\"\");\n    try {\n      const res = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`);\n      const data = await res.json();\n      if (data.Response === \"True\") {\n        setSelectedMovie(data);\n      } else {\n        setError(data.Error);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch movie details.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Search App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchMovies,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search for a movie...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Searching...\" : \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), !selectedMovie ? /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      onMovieClick: fetchMovieDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MovieDetail, {\n      movie: selectedMovie,\n      onBack: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oYRzb+dnYWButNRPb69lx0dcpDI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MovieList","MovieDetail","searchMovies","getMovieDetail","jsxDEV","_jsxDEV","API_KEY","App","_s","query","setQuery","movies","setMovies","selectedMovie","setSelectedMovie","loading","setLoading","error","setError","e","preventDefault","res","fetch","encodeURIComponent","data","json","Response","Search","Error","err","fetchMovieDetail","imdbID","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","onMovieClick","movie","onBack","_c","$RefreshReg$"],"sources":["E:/Nexus/movie app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport MovieList from \"./components/MovieList\";\r\nimport MovieDetail from \"./components/MovieDetail\";\r\nimport { searchMovies, getMovieDetail } from \"./api/omdb\";\r\n\r\n// Use searchMovies(query) and getMovieDetail(imdbID) in your component logic\r\n\r\nconst API_KEY = \"ecc218a8\"; // <-- Replace with your OMDb API key\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const searchMovies = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSelectedMovie(null);\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setMovies(data.Search);\r\n      } else {\r\n        setMovies([]);\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movies.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchMovieDetail = async (imdbID) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      const res = await fetch(\r\n        `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`\r\n      );\r\n      const data = await res.json();\r\n      if (data.Response === \"True\") {\r\n        setSelectedMovie(data);\r\n      } else {\r\n        setError(data.Error);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to fetch movie details.\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Movie Search App</h1>\r\n      <form onSubmit={searchMovies} className=\"search-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={loading}>\r\n          {loading ? \"Searching...\" : \"Search\"}\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {!selectedMovie ? (\r\n        <MovieList movies={movies} onMovieClick={fetchMovieDetail} />\r\n      ) : (\r\n        <MovieDetail movie={selectedMovie} onBack={() => setSelectedMovie(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}