{"ast":null,"code":"const API_KEY=\"ecc218a8\";// Replace with your actual API key\nexport async function searchMovies(query){try{const res=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`);if(!res.ok){throw new Error(`HTTP error! status: ${res.status}`);}const data=await res.json();return data;}catch(error){console.error(\"Error fetching movies:\",error);return{Response:\"False\",Error:\"Failed to fetch movies\"};}}export async function getMovieDetail(imdbID){try{const res=await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`);if(!res.ok){throw new Error(`HTTP error! status: ${res.status}`);}const data=await res.json();return data;}catch(error){console.error(\"Error fetching movie details:\",error);return{Response:\"False\",Error:\"Failed to fetch movie details\"};}}","map":{"version":3,"names":["API_KEY","searchMovies","query","res","fetch","encodeURIComponent","ok","Error","status","data","json","error","console","Response","getMovieDetail","imdbID"],"sources":["E:/Nexus/movie app/src/api/omdb.js"],"sourcesContent":["const API_KEY = \"ecc218a8\"; // Replace with your actual API key\r\nexport async function searchMovies(query) {\r\n  try {\r\n    const res = await fetch(\r\n      `https://www.omdbapi.com/?apikey=${API_KEY}&s=${encodeURIComponent(query)}`\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error(`HTTP error! status: ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching movies:\", error);\r\n    return { Response: \"False\", Error: \"Failed to fetch movies\" };\r\n  }\r\n}\r\n\r\nexport async function getMovieDetail(imdbID) {\r\n  try {\r\n    const res = await fetch(\r\n      `https://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}&plot=full`\r\n    );\r\n    if (!res.ok) {\r\n      throw new Error(`HTTP error! status: ${res.status}`);\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie details:\", error);\r\n    return { Response: \"False\", Error: \"Failed to fetch movie details\" };\r\n  }\r\n}"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,UAAU,CAAE;AAC5B,MAAO,eAAe,CAAAC,YAAYA,CAACC,KAAK,CAAE,CACxC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,mCAAmCJ,OAAO,MAAMK,kBAAkB,CAACH,KAAK,CAAC,EAC3E,CAAC,CACD,GAAI,CAACC,GAAG,CAACG,EAAE,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBJ,GAAG,CAACK,MAAM,EAAE,CAAC,CACtD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC7B,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C,MAAO,CAAEE,QAAQ,CAAE,OAAO,CAAEN,KAAK,CAAE,wBAAyB,CAAC,CAC/D,CACF,CAEA,MAAO,eAAe,CAAAO,cAAcA,CAACC,MAAM,CAAE,CAC3C,GAAI,CACF,KAAM,CAAAZ,GAAG,CAAG,KAAM,CAAAC,KAAK,CACrB,mCAAmCJ,OAAO,MAAMe,MAAM,YACxD,CAAC,CACD,GAAI,CAACZ,GAAG,CAACG,EAAE,CAAE,CACX,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuBJ,GAAG,CAACK,MAAM,EAAE,CAAC,CACtD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,CAAC,CAC7B,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD,MAAO,CAAEE,QAAQ,CAAE,OAAO,CAAEN,KAAK,CAAE,+BAAgC,CAAC,CACtE,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}